// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paymentrequest.proto

#include "paymentrequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace payments {
class OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Output>
      _instance;
} _Output_default_instance_;
class PaymentDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaymentDetails>
      _instance;
} _PaymentDetails_default_instance_;
class PaymentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaymentRequest>
      _instance;
} _PaymentRequest_default_instance_;
class X509CertificatesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<X509Certificates>
      _instance;
} _X509Certificates_default_instance_;
class PaymentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Payment>
      _instance;
} _Payment_default_instance_;
class PaymentACKDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaymentACK>
      _instance;
} _PaymentACK_default_instance_;
}  // namespace payments
namespace protobuf_paymentrequest_2eproto {
void InitDefaultsOutputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::payments::_Output_default_instance_;
    new (ptr) ::payments::Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::Output::InitAsDefaultInstance();
}

void InitDefaultsOutput() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOutputImpl);
}

void InitDefaultsPaymentDetailsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_paymentrequest_2eproto::InitDefaultsOutput();
  ::payments::PaymentDetails::_default_network_.DefaultConstruct();
  *::payments::PaymentDetails::_default_network_.get_mutable() = ::std::string("main", 4);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::payments::PaymentDetails::_default_network_.get_mutable());
  {
    void* ptr = &::payments::_PaymentDetails_default_instance_;
    new (ptr) ::payments::PaymentDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::PaymentDetails::InitAsDefaultInstance();
}

void InitDefaultsPaymentDetails() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPaymentDetailsImpl);
}

void InitDefaultsPaymentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::payments::PaymentRequest::_default_pki_type_.DefaultConstruct();
  *::payments::PaymentRequest::_default_pki_type_.get_mutable() = ::std::string("none", 4);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::payments::PaymentRequest::_default_pki_type_.get_mutable());
  {
    void* ptr = &::payments::_PaymentRequest_default_instance_;
    new (ptr) ::payments::PaymentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::PaymentRequest::InitAsDefaultInstance();
}

void InitDefaultsPaymentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPaymentRequestImpl);
}

void InitDefaultsX509CertificatesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::payments::_X509Certificates_default_instance_;
    new (ptr) ::payments::X509Certificates();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::X509Certificates::InitAsDefaultInstance();
}

void InitDefaultsX509Certificates() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsX509CertificatesImpl);
}

void InitDefaultsPaymentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_paymentrequest_2eproto::InitDefaultsOutput();
  {
    void* ptr = &::payments::_Payment_default_instance_;
    new (ptr) ::payments::Payment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::Payment::InitAsDefaultInstance();
}

void InitDefaultsPayment() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPaymentImpl);
}

void InitDefaultsPaymentACKImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_paymentrequest_2eproto::InitDefaultsPayment();
  {
    void* ptr = &::payments::_PaymentACK_default_instance_;
    new (ptr) ::payments::PaymentACK();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::payments::PaymentACK::InitAsDefaultInstance();
}

void InitDefaultsPaymentACK() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPaymentACKImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Output, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Output, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Output, script_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, network_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, outputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, expires_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, memo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, payment_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentDetails, merchant_data_),
  0,
  ~0u,
  4,
  5,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, payment_details_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, pki_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, pki_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, serialized_payment_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentRequest, signature_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::X509Certificates, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::X509Certificates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::X509Certificates, certificate_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, merchant_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, transactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, refund_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::Payment, memo_),
  0,
  ~0u,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentACK, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentACK, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentACK, payment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::payments::PaymentACK, memo_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::payments::Output)},
  { 9, 21, sizeof(::payments::PaymentDetails)},
  { 28, 38, sizeof(::payments::PaymentRequest)},
  { 43, 49, sizeof(::payments::X509Certificates)},
  { 50, 59, sizeof(::payments::Payment)},
  { 63, 70, sizeof(::payments::PaymentACK)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_PaymentDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_PaymentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_X509Certificates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_Payment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::payments::_PaymentACK_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "paymentrequest.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024paymentrequest.proto\022\010payments\"+\n\006Outp"
      "ut\022\021\n\006amount\030\001 \001(\004:\0010\022\016\n\006script\030\002 \002(\014\"\243\001"
      "\n\016PaymentDetails\022\025\n\007network\030\001 \001(\t:\004main\022"
      "!\n\007outputs\030\002 \003(\0132\020.payments.Output\022\014\n\004ti"
      "me\030\003 \002(\004\022\017\n\007expires\030\004 \001(\004\022\014\n\004memo\030\005 \001(\t\022"
      "\023\n\013payment_url\030\006 \001(\t\022\025\n\rmerchant_data\030\007 "
      "\001(\014\"\225\001\n\016PaymentRequest\022\"\n\027payment_detail"
      "s_version\030\001 \001(\r:\0011\022\026\n\010pki_type\030\002 \001(\t:\004no"
      "ne\022\020\n\010pki_data\030\003 \001(\014\022\"\n\032serialized_payme"
      "nt_details\030\004 \002(\014\022\021\n\tsignature\030\005 \001(\014\"\'\n\020X"
      "509Certificates\022\023\n\013certificate\030\001 \003(\014\"i\n\007"
      "Payment\022\025\n\rmerchant_data\030\001 \001(\014\022\024\n\014transa"
      "ctions\030\002 \003(\014\022#\n\trefund_to\030\003 \003(\0132\020.paymen"
      "ts.Output\022\014\n\004memo\030\004 \001(\t\">\n\nPaymentACK\022\"\n"
      "\007payment\030\001 \002(\0132\021.payments.Payment\022\014\n\004mem"
      "o\030\002 \001(\tB(\n\036org.bitcoin.protocols.payment"
      "sB\006Protos"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 649);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "paymentrequest.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_paymentrequest_2eproto
namespace payments {

// ===================================================================

void Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Output::kAmountFieldNumber;
const int Output::kScriptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Output::Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsOutput();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.Output)
}
Output::Output(const Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_script()) {
    script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:payments.Output)
}

void Output::SharedCtor() {
  _cached_size_ = 0;
  script_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_ULONGLONG(0);
}

Output::~Output() {
  // @@protoc_insertion_point(destructor:payments.Output)
  SharedDtor();
}

void Output::SharedDtor() {
  script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Output::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Output::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Output& Output::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsOutput();
  return *internal_default_instance();
}

Output* Output::New(::google::protobuf::Arena* arena) const {
  Output* n = new Output;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Output::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!script_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*script_.UnsafeRawStringPointer())->clear();
  }
  amount_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.Output)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 amount = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_amount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes script = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_script()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.Output)
  return false;
#undef DO_
}

void Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->amount(), output);
  }

  // required bytes script = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->script(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.Output)
}

::google::protobuf::uint8* Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 amount = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->amount(), target);
  }

  // required bytes script = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->script(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.Output)
  return target;
}

size_t Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.Output)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes script = 2;
  if (has_script()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->script());
  }
  // optional uint64 amount = 1 [default = 0];
  if (has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.Output)
    MergeFrom(*source);
  }
}

void Output::MergeFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_script();
      script_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.script_);
    }
    if (cached_has_bits & 0x00000002u) {
      amount_ = from.amount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Output::CopyFrom(const Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Output::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Output::Swap(Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Output::InternalSwap(Output* other) {
  using std::swap;
  script_.Swap(&other->script_);
  swap(amount_, other->amount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Output::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PaymentDetails::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed< ::std::string> PaymentDetails::_default_network_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaymentDetails::kNetworkFieldNumber;
const int PaymentDetails::kOutputsFieldNumber;
const int PaymentDetails::kTimeFieldNumber;
const int PaymentDetails::kExpiresFieldNumber;
const int PaymentDetails::kMemoFieldNumber;
const int PaymentDetails::kPaymentUrlFieldNumber;
const int PaymentDetails::kMerchantDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentDetails::PaymentDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentDetails();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.PaymentDetails)
}
PaymentDetails::PaymentDetails(const PaymentDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_.UnsafeSetDefault(&::payments::PaymentDetails::_default_network_.get());
  if (from.has_network()) {
    network_.AssignWithDefault(&::payments::PaymentDetails::_default_network_.get(), from.network_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  payment_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payment_url()) {
    payment_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_url_);
  }
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merchant_data()) {
    merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
  }
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&expires_) -
    reinterpret_cast<char*>(&time_)) + sizeof(expires_));
  // @@protoc_insertion_point(copy_constructor:payments.PaymentDetails)
}

void PaymentDetails::SharedCtor() {
  _cached_size_ = 0;
  network_.UnsafeSetDefault(&::payments::PaymentDetails::_default_network_.get());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expires_) -
      reinterpret_cast<char*>(&time_)) + sizeof(expires_));
}

PaymentDetails::~PaymentDetails() {
  // @@protoc_insertion_point(destructor:payments.PaymentDetails)
  SharedDtor();
}

void PaymentDetails::SharedDtor() {
  network_.DestroyNoArena(&::payments::PaymentDetails::_default_network_.get());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  merchant_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaymentDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentDetails::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaymentDetails& PaymentDetails::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentDetails();
  return *internal_default_instance();
}

PaymentDetails* PaymentDetails::New(::google::protobuf::Arena* arena) const {
  PaymentDetails* n = new PaymentDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaymentDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.PaymentDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!network_.IsDefault(&::payments::PaymentDetails::_default_network_.get()));
      (*network_.UnsafeRawStringPointer())->assign(*&::payments::PaymentDetails::_default_network_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!payment_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*payment_url_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!merchant_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*merchant_data_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&expires_) -
        reinterpret_cast<char*>(&time_)) + sizeof(expires_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaymentDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.PaymentDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string network = 1 [default = "main"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_network()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->network().data(), static_cast<int>(this->network().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.PaymentDetails.network");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .payments.Output outputs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 expires = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_expires();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &expires_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.PaymentDetails.memo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string payment_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payment_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payment_url().data(), static_cast<int>(this->payment_url().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.PaymentDetails.payment_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merchant_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merchant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.PaymentDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.PaymentDetails)
  return false;
#undef DO_
}

void PaymentDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.PaymentDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string network = 1 [default = "main"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.network");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->network(), output);
  }

  // repeated .payments.Output outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->outputs(static_cast<int>(i)), output);
  }

  // required uint64 time = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->time(), output);
  }

  // optional uint64 expires = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->expires(), output);
  }

  // optional string memo = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->memo(), output);
  }

  // optional string payment_url = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payment_url().data(), static_cast<int>(this->payment_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.payment_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->payment_url(), output);
  }

  // optional bytes merchant_data = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->merchant_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.PaymentDetails)
}

::google::protobuf::uint8* PaymentDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.PaymentDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string network = 1 [default = "main"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->network().data(), static_cast<int>(this->network().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.network");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->network(), target);
  }

  // repeated .payments.Output outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->outputs(static_cast<int>(i)), deterministic, target);
  }

  // required uint64 time = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->time(), target);
  }

  // optional uint64 expires = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->expires(), target);
  }

  // optional string memo = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->memo(), target);
  }

  // optional string payment_url = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payment_url().data(), static_cast<int>(this->payment_url().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentDetails.payment_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->payment_url(), target);
  }

  // optional bytes merchant_data = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->merchant_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.PaymentDetails)
  return target;
}

size_t PaymentDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.PaymentDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 time = 3;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }
  // repeated .payments.Output outputs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->outputs(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string network = 1 [default = "main"];
    if (has_network()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->network());
    }

    // optional string memo = 5;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

    // optional string payment_url = 6;
    if (has_payment_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->payment_url());
    }

    // optional bytes merchant_data = 7;
    if (has_merchant_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merchant_data());
    }

  }
  // optional uint64 expires = 4;
  if (has_expires()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->expires());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.PaymentDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaymentDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.PaymentDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.PaymentDetails)
    MergeFrom(*source);
  }
}

void PaymentDetails::MergeFrom(const PaymentDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.PaymentDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_network();
      network_.AssignWithDefault(&::payments::PaymentDetails::_default_network_.get(), from.network_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_payment_url();
      payment_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payment_url_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_merchant_data();
      merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
    }
    if (cached_has_bits & 0x00000010u) {
      time_ = from.time_;
    }
    if (cached_has_bits & 0x00000020u) {
      expires_ = from.expires_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaymentDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.PaymentDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentDetails::CopyFrom(const PaymentDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.PaymentDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentDetails::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->outputs())) return false;
  return true;
}

void PaymentDetails::Swap(PaymentDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentDetails::InternalSwap(PaymentDetails* other) {
  using std::swap;
  outputs_.InternalSwap(&other->outputs_);
  network_.Swap(&other->network_);
  memo_.Swap(&other->memo_);
  payment_url_.Swap(&other->payment_url_);
  merchant_data_.Swap(&other->merchant_data_);
  swap(time_, other->time_);
  swap(expires_, other->expires_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaymentDetails::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PaymentRequest::InitAsDefaultInstance() {
}
::google::protobuf::internal::ExplicitlyConstructed< ::std::string> PaymentRequest::_default_pki_type_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaymentRequest::kPaymentDetailsVersionFieldNumber;
const int PaymentRequest::kPkiTypeFieldNumber;
const int PaymentRequest::kPkiDataFieldNumber;
const int PaymentRequest::kSerializedPaymentDetailsFieldNumber;
const int PaymentRequest::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentRequest::PaymentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.PaymentRequest)
}
PaymentRequest::PaymentRequest(const PaymentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pki_type_.UnsafeSetDefault(&::payments::PaymentRequest::_default_pki_type_.get());
  if (from.has_pki_type()) {
    pki_type_.AssignWithDefault(&::payments::PaymentRequest::_default_pki_type_.get(), from.pki_type_);
  }
  pki_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pki_data()) {
    pki_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pki_data_);
  }
  serialized_payment_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_payment_details()) {
    serialized_payment_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_payment_details_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  payment_details_version_ = from.payment_details_version_;
  // @@protoc_insertion_point(copy_constructor:payments.PaymentRequest)
}

void PaymentRequest::SharedCtor() {
  _cached_size_ = 0;
  pki_type_.UnsafeSetDefault(&::payments::PaymentRequest::_default_pki_type_.get());
  pki_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_payment_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_details_version_ = 1u;
}

PaymentRequest::~PaymentRequest() {
  // @@protoc_insertion_point(destructor:payments.PaymentRequest)
  SharedDtor();
}

void PaymentRequest::SharedDtor() {
  pki_type_.DestroyNoArena(&::payments::PaymentRequest::_default_pki_type_.get());
  pki_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_payment_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaymentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentRequest::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaymentRequest& PaymentRequest::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentRequest();
  return *internal_default_instance();
}

PaymentRequest* PaymentRequest::New(::google::protobuf::Arena* arena) const {
  PaymentRequest* n = new PaymentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaymentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!pki_type_.IsDefault(&::payments::PaymentRequest::_default_pki_type_.get()));
      (*pki_type_.UnsafeRawStringPointer())->assign(*&::payments::PaymentRequest::_default_pki_type_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!pki_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pki_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!serialized_payment_details_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_payment_details_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    payment_details_version_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaymentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.PaymentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 payment_details_version = 1 [default = 1];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_payment_details_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &payment_details_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pki_type = 2 [default = "none"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pki_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pki_type().data(), static_cast<int>(this->pki_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.PaymentRequest.pki_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pki_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pki_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes serialized_payment_details = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_payment_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.PaymentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.PaymentRequest)
  return false;
#undef DO_
}

void PaymentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 payment_details_version = 1 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->payment_details_version(), output);
  }

  // optional string pki_type = 2 [default = "none"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pki_type().data(), static_cast<int>(this->pki_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentRequest.pki_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pki_type(), output);
  }

  // optional bytes pki_data = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pki_data(), output);
  }

  // required bytes serialized_payment_details = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->serialized_payment_details(), output);
  }

  // optional bytes signature = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.PaymentRequest)
}

::google::protobuf::uint8* PaymentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.PaymentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 payment_details_version = 1 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->payment_details_version(), target);
  }

  // optional string pki_type = 2 [default = "none"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pki_type().data(), static_cast<int>(this->pki_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentRequest.pki_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pki_type(), target);
  }

  // optional bytes pki_data = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pki_data(), target);
  }

  // required bytes serialized_payment_details = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->serialized_payment_details(), target);
  }

  // optional bytes signature = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.PaymentRequest)
  return target;
}

size_t PaymentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.PaymentRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bytes serialized_payment_details = 4;
  if (has_serialized_payment_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialized_payment_details());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string pki_type = 2 [default = "none"];
    if (has_pki_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pki_type());
    }

    // optional bytes pki_data = 3;
    if (has_pki_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pki_data());
    }

  }
  if (_has_bits_[0 / 32] & 24u) {
    // optional bytes signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional uint32 payment_details_version = 1 [default = 1];
    if (has_payment_details_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->payment_details_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaymentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.PaymentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.PaymentRequest)
    MergeFrom(*source);
  }
}

void PaymentRequest::MergeFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.PaymentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pki_type();
      pki_type_.AssignWithDefault(&::payments::PaymentRequest::_default_pki_type_.get(), from.pki_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pki_data();
      pki_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pki_data_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_serialized_payment_details();
      serialized_payment_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_payment_details_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000010u) {
      payment_details_version_ = from.payment_details_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PaymentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentRequest::CopyFrom(const PaymentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.PaymentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void PaymentRequest::Swap(PaymentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentRequest::InternalSwap(PaymentRequest* other) {
  using std::swap;
  pki_type_.Swap(&other->pki_type_);
  pki_data_.Swap(&other->pki_data_);
  serialized_payment_details_.Swap(&other->serialized_payment_details_);
  signature_.Swap(&other->signature_);
  swap(payment_details_version_, other->payment_details_version_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaymentRequest::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void X509Certificates::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int X509Certificates::kCertificateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

X509Certificates::X509Certificates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsX509Certificates();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.X509Certificates)
}
X509Certificates::X509Certificates(const X509Certificates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      certificate_(from.certificate_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:payments.X509Certificates)
}

void X509Certificates::SharedCtor() {
  _cached_size_ = 0;
}

X509Certificates::~X509Certificates() {
  // @@protoc_insertion_point(destructor:payments.X509Certificates)
  SharedDtor();
}

void X509Certificates::SharedDtor() {
}

void X509Certificates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* X509Certificates::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const X509Certificates& X509Certificates::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsX509Certificates();
  return *internal_default_instance();
}

X509Certificates* X509Certificates::New(::google::protobuf::Arena* arena) const {
  X509Certificates* n = new X509Certificates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void X509Certificates::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.X509Certificates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  certificate_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool X509Certificates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.X509Certificates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes certificate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_certificate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.X509Certificates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.X509Certificates)
  return false;
#undef DO_
}

void X509Certificates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.X509Certificates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes certificate = 1;
  for (int i = 0, n = this->certificate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->certificate(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.X509Certificates)
}

::google::protobuf::uint8* X509Certificates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.X509Certificates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes certificate = 1;
  for (int i = 0, n = this->certificate_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->certificate(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.X509Certificates)
  return target;
}

size_t X509Certificates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.X509Certificates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes certificate = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->certificate_size());
  for (int i = 0, n = this->certificate_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->certificate(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void X509Certificates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.X509Certificates)
  GOOGLE_DCHECK_NE(&from, this);
  const X509Certificates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const X509Certificates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.X509Certificates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.X509Certificates)
    MergeFrom(*source);
  }
}

void X509Certificates::MergeFrom(const X509Certificates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.X509Certificates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  certificate_.MergeFrom(from.certificate_);
}

void X509Certificates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.X509Certificates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void X509Certificates::CopyFrom(const X509Certificates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.X509Certificates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool X509Certificates::IsInitialized() const {
  return true;
}

void X509Certificates::Swap(X509Certificates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void X509Certificates::InternalSwap(X509Certificates* other) {
  using std::swap;
  certificate_.InternalSwap(&other->certificate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata X509Certificates::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Payment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Payment::kMerchantDataFieldNumber;
const int Payment::kTransactionsFieldNumber;
const int Payment::kRefundToFieldNumber;
const int Payment::kMemoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Payment::Payment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsPayment();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.Payment)
}
Payment::Payment(const Payment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      transactions_(from.transactions_),
      refund_to_(from.refund_to_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merchant_data()) {
    merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
  }
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  // @@protoc_insertion_point(copy_constructor:payments.Payment)
}

void Payment::SharedCtor() {
  _cached_size_ = 0;
  merchant_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Payment::~Payment() {
  // @@protoc_insertion_point(destructor:payments.Payment)
  SharedDtor();
}

void Payment::SharedDtor() {
  merchant_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Payment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Payment::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Payment& Payment::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsPayment();
  return *internal_default_instance();
}

Payment* Payment::New(::google::protobuf::Arena* arena) const {
  Payment* n = new Payment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Payment::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  refund_to_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!merchant_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*merchant_data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Payment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.Payment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes merchant_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merchant_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes transactions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .payments.Output refund_to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_refund_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.Payment.memo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.Payment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.Payment)
  return false;
#undef DO_
}

void Payment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes merchant_data = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->merchant_data(), output);
  }

  // repeated bytes transactions = 2;
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->transactions(i), output);
  }

  // repeated .payments.Output refund_to = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refund_to_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->refund_to(static_cast<int>(i)), output);
  }

  // optional string memo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.Payment.memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->memo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.Payment)
}

::google::protobuf::uint8* Payment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.Payment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes merchant_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->merchant_data(), target);
  }

  // repeated bytes transactions = 2;
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->transactions(i), target);
  }

  // repeated .payments.Output refund_to = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->refund_to_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->refund_to(static_cast<int>(i)), deterministic, target);
  }

  // optional string memo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.Payment.memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->memo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.Payment)
  return target;
}

size_t Payment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.Payment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes transactions = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transactions_size());
  for (int i = 0, n = this->transactions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->transactions(i));
  }

  // repeated .payments.Output refund_to = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->refund_to_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->refund_to(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes merchant_data = 1;
    if (has_merchant_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merchant_data());
    }

    // optional string memo = 4;
    if (has_memo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->memo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Payment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.Payment)
  GOOGLE_DCHECK_NE(&from, this);
  const Payment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Payment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.Payment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.Payment)
    MergeFrom(*source);
  }
}

void Payment::MergeFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.Payment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  refund_to_.MergeFrom(from.refund_to_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merchant_data();
      merchant_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merchant_data_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
  }
}

void Payment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Payment::CopyFrom(const Payment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.Payment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Payment::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->refund_to())) return false;
  return true;
}

void Payment::Swap(Payment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Payment::InternalSwap(Payment* other) {
  using std::swap;
  transactions_.InternalSwap(&other->transactions_);
  refund_to_.InternalSwap(&other->refund_to_);
  merchant_data_.Swap(&other->merchant_data_);
  memo_.Swap(&other->memo_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Payment::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PaymentACK::InitAsDefaultInstance() {
  ::payments::_PaymentACK_default_instance_._instance.get_mutable()->payment_ = const_cast< ::payments::Payment*>(
      ::payments::Payment::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaymentACK::kPaymentFieldNumber;
const int PaymentACK::kMemoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaymentACK::PaymentACK()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentACK();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:payments.PaymentACK)
}
PaymentACK::PaymentACK(const PaymentACK& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_memo()) {
    memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
  }
  if (from.has_payment()) {
    payment_ = new ::payments::Payment(*from.payment_);
  } else {
    payment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:payments.PaymentACK)
}

void PaymentACK::SharedCtor() {
  _cached_size_ = 0;
  memo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payment_ = NULL;
}

PaymentACK::~PaymentACK() {
  // @@protoc_insertion_point(destructor:payments.PaymentACK)
  SharedDtor();
}

void PaymentACK::SharedDtor() {
  memo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete payment_;
}

void PaymentACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PaymentACK::descriptor() {
  ::protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaymentACK& PaymentACK::default_instance() {
  ::protobuf_paymentrequest_2eproto::InitDefaultsPaymentACK();
  return *internal_default_instance();
}

PaymentACK* PaymentACK::New(::google::protobuf::Arena* arena) const {
  PaymentACK* n = new PaymentACK;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PaymentACK::Clear() {
// @@protoc_insertion_point(message_clear_start:payments.PaymentACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!memo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*memo_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(payment_ != NULL);
      payment_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PaymentACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:payments.PaymentACK)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .payments.Payment payment = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_payment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string memo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_memo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->memo().data(), static_cast<int>(this->memo().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payments.PaymentACK.memo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:payments.PaymentACK)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:payments.PaymentACK)
  return false;
#undef DO_
}

void PaymentACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:payments.PaymentACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .payments.Payment payment = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->payment_, output);
  }

  // optional string memo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentACK.memo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->memo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:payments.PaymentACK)
}

::google::protobuf::uint8* PaymentACK::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:payments.PaymentACK)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .payments.Payment payment = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->payment_, deterministic, target);
  }

  // optional string memo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->memo().data(), static_cast<int>(this->memo().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payments.PaymentACK.memo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->memo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:payments.PaymentACK)
  return target;
}

size_t PaymentACK::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:payments.PaymentACK)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .payments.Payment payment = 1;
  if (has_payment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->payment_);
  }
  // optional string memo = 2;
  if (has_memo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->memo());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PaymentACK::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:payments.PaymentACK)
  GOOGLE_DCHECK_NE(&from, this);
  const PaymentACK* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaymentACK>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:payments.PaymentACK)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:payments.PaymentACK)
    MergeFrom(*source);
  }
}

void PaymentACK::MergeFrom(const PaymentACK& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:payments.PaymentACK)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_memo();
      memo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.memo_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_payment()->::payments::Payment::MergeFrom(from.payment());
    }
  }
}

void PaymentACK::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:payments.PaymentACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaymentACK::CopyFrom(const PaymentACK& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:payments.PaymentACK)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaymentACK::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_payment()) {
    if (!this->payment_->IsInitialized()) return false;
  }
  return true;
}

void PaymentACK::Swap(PaymentACK* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaymentACK::InternalSwap(PaymentACK* other) {
  using std::swap;
  memo_.Swap(&other->memo_);
  swap(payment_, other->payment_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PaymentACK::GetMetadata() const {
  protobuf_paymentrequest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_paymentrequest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace payments

// @@protoc_insertion_point(global_scope)
